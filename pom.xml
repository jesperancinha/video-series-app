<project xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jesperancinha.video</groupId>
    <artifactId>video-series-app</artifactId>
    <version>2.0.0-SNAPSHOT</version>

    <name>VSA :: Parent Library</name>

    <modules>
        <module>video-series-mono</module>
        <module>video-series-command</module>
        <module>video-series-query</module>
        <module>video-series-core</module>
    </modules>
    <packaging>pom</packaging>

    <properties>
        <!-- External Dependency Versions -->
        <java.version>21</java.version>
        <maven-compiler-plugin.source>${java.version}</maven-compiler-plugin.source>
        <maven-compiler-plugin.target>${java.version}</maven-compiler-plugin.target>
        <maven-compiler-plugin.version>3.14.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>

        <!-- Study case libraries -->
        <axon.version>4.12.1</axon.version>
        <axon-mongo.version>4.12.0</axon-mongo.version>
        <axon-spring-boot-starter.version>${axon.version}</axon-spring-boot-starter.version>
        <versions-maven-plugin.version>2.19.1</versions-maven-plugin.version>

        <!-- Serialization libraries -->
        <xstream.version>1.4.21</xstream.version>

        <h2.version>2.1.214</h2.version>
        <lombok.version>1.18.42</lombok.version>

        <!-- Test Dependency Versions -->
        <junit-jupiter.version>6.0.0</junit-jupiter.version>

        <jacoco-maven-plugin.version>0.8.14</jacoco-maven-plugin.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <coveralls-maven-plugin.version>4.3.0</coveralls-maven-plugin.version>
        <springmockk.version>4.0.2</springmockk.version>
        <kotest-extensions-spring.version>1.3.0</kotest-extensions-spring.version>
        <mockk.version>1.14.6</mockk.version>
        <kotest.version>5.8.0</kotest.version>

        <kotlin.version>2.2.20</kotlin.version>
        <kotlinx-coroutines.version>1.10.2</kotlinx-coroutines.version>
        <kotlinx-coroutines-debug.version>1.10.2</kotlinx-coroutines-debug.version>

        <spring-boot.version>3.5.7</spring-boot.version>
        <springdoc-openapi-starter-webmvc-ui.version>2.8.13</springdoc-openapi-starter-webmvc-ui.version>

        <testcontainers.version>2.0.0</testcontainers.version>
        <jacoco-maven-plugin.version>0.8.14</jacoco-maven-plugin.version>
        <omni-coveragereporter-maven-plugin.version>0.4.5</omni-coveragereporter-maven-plugin.version>
        <hibernate-validator.version>9.0.1.Final</hibernate-validator.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Inner dependencies -->
            <dependency>
                <groupId>org.jesperancinha.video</groupId>
                <artifactId>video-series-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jesperancinha.video</groupId>
                <artifactId>video-series-core</artifactId>
                <type>test-jar</type>
                <scope>test</scope>
                <version>${project.version}</version>
            </dependency>

            <!-- External Dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-spring-boot-starter</artifactId>
                <version>${axon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework.extensions.mongo</groupId>
                <artifactId>axon-mongo</artifactId>
                <version>${axon-mongo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.mockk</groupId>
                <artifactId>mockk-jvm</artifactId>
                <version>${mockk.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest.extensions</groupId>
                <artifactId>kotest-extensions-spring</artifactId>
                <version>${kotest-extensions-spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-runner-junit5-jvm</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-runner-junit5</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.ninja-squad</groupId>
                <artifactId>springmockk</artifactId>
                <version>${springmockk.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-core-jvm</artifactId>
                <version>${kotlinx-coroutines.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>

            <!-- This Dependency is added as a workaround for the following issue -->
            <!--- https://github.com/Kotlin/kotlinx.coroutines/issues/3334 -->
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-debug</artifactId>
                <version>${kotlinx-coroutines-debug.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-extensions-testcontainers</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-extensions-testcontainers-jvm</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-framework-api-jvm</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jesperancinha.plugins</groupId>
                <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                <version>${omni-coveragereporter-maven-plugin.version}</version>
                <configuration>
                    <useCoverallsCount>false</useCoverallsCount>
                    <fetchBranchNameFromEnv>true</fetchBranchNameFromEnv>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <configuration>
                    <excludes>
                        <exclude>org.apache.commons:commons-collections4</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>